<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hang.blog.mvc.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.hang.blog.mvc.entity.Comment">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ARTICLE_ID" jdbcType="INTEGER" property="articleId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
    <result column="ISMAIN_" jdbcType="INTEGER" property="ismain" />
    <result column="SONCOUNT_" jdbcType="INTEGER" property="soncount" />
    <result column="PARENTID" jdbcType="VARCHAR" property="parentid" />
    <result column="RANK_" jdbcType="INTEGER" property="rank" />
    <result column="TEMPTITLE" jdbcType="VARCHAR" property="temptitle" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hang.blog.mvc.entity.Comment">
    <result column="CONTENT_" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ARTICLE_ID, USER_ID, CREATETIME, ISMAIN_, SONCOUNT_, PARENTID, RANK_, TEMPTITLE
  </sql>
  <sql id="Blob_Column_List">
    CONTENT_
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hang.blog.mvc.entity.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hang.blog.mvc.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comment_
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hang.blog.mvc.entity.CommentExample">
    delete from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hang.blog.mvc.entity.Comment">
    insert into comment_ (ID, ARTICLE_ID, USER_ID, 
      CREATETIME, ISMAIN_, SONCOUNT_, 
      PARENTID, RANK_, TEMPTITLE, 
      CONTENT_)
    values (#{id,jdbcType=VARCHAR}, #{articleId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{ismain,jdbcType=INTEGER}, #{soncount,jdbcType=INTEGER}, 
      #{parentid,jdbcType=VARCHAR}, #{rank,jdbcType=INTEGER}, #{temptitle,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hang.blog.mvc.entity.Comment">
    insert into comment_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="articleId != null">
        ARTICLE_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
      <if test="ismain != null">
        ISMAIN_,
      </if>
      <if test="soncount != null">
        SONCOUNT_,
      </if>
      <if test="parentid != null">
        PARENTID,
      </if>
      <if test="rank != null">
        RANK_,
      </if>
      <if test="temptitle != null">
        TEMPTITLE,
      </if>
      <if test="content != null">
        CONTENT_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ismain != null">
        #{ismain,jdbcType=INTEGER},
      </if>
      <if test="soncount != null">
        #{soncount,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="temptitle != null">
        #{temptitle,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hang.blog.mvc.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment_
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null">
        ARTICLE_ID = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ismain != null">
        ISMAIN_ = #{record.ismain,jdbcType=INTEGER},
      </if>
      <if test="record.soncount != null">
        SONCOUNT_ = #{record.soncount,jdbcType=INTEGER},
      </if>
      <if test="record.parentid != null">
        PARENTID = #{record.parentid,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        RANK_ = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.temptitle != null">
        TEMPTITLE = #{record.temptitle,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT_ = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment_
    set ID = #{record.id,jdbcType=VARCHAR},
      ARTICLE_ID = #{record.articleId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      ISMAIN_ = #{record.ismain,jdbcType=INTEGER},
      SONCOUNT_ = #{record.soncount,jdbcType=INTEGER},
      PARENTID = #{record.parentid,jdbcType=VARCHAR},
      RANK_ = #{record.rank,jdbcType=INTEGER},
      TEMPTITLE = #{record.temptitle,jdbcType=VARCHAR},
      CONTENT_ = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment_
    set ID = #{record.id,jdbcType=VARCHAR},
      ARTICLE_ID = #{record.articleId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      ISMAIN_ = #{record.ismain,jdbcType=INTEGER},
      SONCOUNT_ = #{record.soncount,jdbcType=INTEGER},
      PARENTID = #{record.parentid,jdbcType=VARCHAR},
      RANK_ = #{record.rank,jdbcType=INTEGER},
      TEMPTITLE = #{record.temptitle,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hang.blog.mvc.entity.Comment">
    update comment_
    <set>
      <if test="articleId != null">
        ARTICLE_ID = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ismain != null">
        ISMAIN_ = #{ismain,jdbcType=INTEGER},
      </if>
      <if test="soncount != null">
        SONCOUNT_ = #{soncount,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        PARENTID = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        RANK_ = #{rank,jdbcType=INTEGER},
      </if>
      <if test="temptitle != null">
        TEMPTITLE = #{temptitle,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hang.blog.mvc.entity.Comment">
    update comment_
    set ARTICLE_ID = #{articleId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      ISMAIN_ = #{ismain,jdbcType=INTEGER},
      SONCOUNT_ = #{soncount,jdbcType=INTEGER},
      PARENTID = #{parentid,jdbcType=VARCHAR},
      RANK_ = #{rank,jdbcType=INTEGER},
      TEMPTITLE = #{temptitle,jdbcType=VARCHAR},
      CONTENT_ = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hang.blog.mvc.entity.Comment">
    update comment_
    set ARTICLE_ID = #{articleId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      ISMAIN_ = #{ismain,jdbcType=INTEGER},
      SONCOUNT_ = #{soncount,jdbcType=INTEGER},
      PARENTID = #{parentid,jdbcType=VARCHAR},
      RANK_ = #{rank,jdbcType=INTEGER},
      TEMPTITLE = #{temptitle,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
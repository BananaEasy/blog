<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd
        ">
		
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 1. 连接池实例 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${mysql.jdbcUrl}"/>
		<property name="driverClass" value="${mysql.driverClass}"/>
		<property name="user" value="${mysql.user}"/>
		<property name="password" value="${mysql.password}"/>
		 <property name="initialPoolSize" value="${mysql.initialPoolSize}"/>
		<property name="maxPoolSize" value="${mysql.maxPoolSize}"/>
	</bean>


	<!--Redis 配置 -->

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="password" value="${redis.pass}"/>
		<property name="poolConfig" ref="poolConfig"/>
		<property name="database" value="2"/>
	</bean>


	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
		</property>
	</bean>


	<!-- 2. Spring管理sqlSessionFactory 【全部配置都写到spring中】 -->
	<!-- # 注入DataSource、 注入配置文件路径 。。扫描xml -->
	<bean id="sqlSsessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<property name="mapperLocations" >
			 <list>
                <value>classpath*:com/blog/mvc/entity/*.xml</value>
            </list>
		</property>
		 <property name="plugins">
	        <array>
	            <bean class="com.github.pagehelper.PageInterceptor"><!--Mybatis 分页插件-->
	            	<property name="properties">
			          <value>
			          </value>
			        </property>
	            </bean>
	        </array>
	    </property>
	</bean>                                                      
	
	<!-- 3. 事务相关配置 -->
	<!-- 3.1 事务管理器类 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception/Throwable"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception/Throwable"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception/Throwable"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception/Throwable"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception/Throwable"/>
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- 扫描Bean是Service的 -->
		<aop:pointcut expression="bean(*Service)" id="currency_AOP" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="currency_AOP" />
	</aop:config>
	
	
	
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSsessionFactory"></constructor-arg>
	</bean>




		
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSsessionFactory"></property>
		<property name="basePackage" value="com.blog.mvc.dao"></property>
	</bean>


	<!-- 配置freeMarker的模板路径 -->
	<bean id="freeMarkerConfigurer" name="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<!-- FreeMarker 自定义标签 <property name="freemarkerVariables"> <map> <entry
			key="xml_escape" value-ref="fmXmlEscape" /> </map> </property> -->
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<!-- 视图检查修改 重加载 -->
				<!-- <prop key="template_update_delay">3600</prop> -->
				<prop key="template_update_delay">0</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
			</props>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize:文件上传的最大值以byte为单位 -->
		<property name="maxUploadSize" value="1024000"></property>
	</bean>


	<aop:aspectj-autoproxy proxy-target-class="true" />



	<!-- 注解扫描 -->
	<context:component-scan base-package="com.blog">
		<context:exclude-filter type="regex" expression="com\.blog\.mvc\.controller\.*"/>
		<context:exclude-filter type="regex" expression="com\.blog\.mvc\.aop\.*"/>
	</context:component-scan>

	<!-- 定时任务开启  -->
	<task:annotation-driven/>
	
</beans>

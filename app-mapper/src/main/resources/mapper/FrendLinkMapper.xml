<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.lihang.blog.mapper.dao.FrendLinkMapper">
  <resultMap id="BaseResultMap" type="xyz.lihang.blog.mapper.entity.FrendLink">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CREATETIME_" jdbcType="TIMESTAMP" property="createtime" />
    <result column="ENDTIME_" jdbcType="TIMESTAMP" property="endtime" />
    <result column="LINK_" jdbcType="VARCHAR" property="link" />
    <result column="LINKTITLE_" jdbcType="VARCHAR" property="linktitle" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="xyz.lihang.blog.mapper.entity.FrendLink">
    <result column="RECORD_" jdbcType="LONGVARCHAR" property="record" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, CREATETIME_, ENDTIME_, LINK_, LINKTITLE_, VERSION
  </sql>
  <sql id="Blob_Column_List">
    RECORD_
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="xyz.lihang.blog.mapper.example.FrendLinkExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from frend_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="xyz.lihang.blog.mapper.example.FrendLinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from frend_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from frend_link
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from frend_link
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.lihang.blog.mapper.example.FrendLinkExample">
    delete from frend_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.lihang.blog.mapper.entity.FrendLink">
    insert into frend_link (ID, CREATETIME_, ENDTIME_, 
      LINK_, LINKTITLE_, VERSION, 
      RECORD_)
    values (#{id,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{link,jdbcType=VARCHAR}, #{linktitle,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{record,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.lihang.blog.mapper.entity.FrendLink">
    insert into frend_link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="createtime != null">
        CREATETIME_,
      </if>
      <if test="endtime != null">
        ENDTIME_,
      </if>
      <if test="link != null">
        LINK_,
      </if>
      <if test="linktitle != null">
        LINKTITLE_,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="record != null">
        RECORD_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="linktitle != null">
        #{linktitle,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="record != null">
        #{record,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.lihang.blog.mapper.example.FrendLinkExample" resultType="java.lang.Long">
    select count(*) from frend_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update frend_link
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        CREATETIME_ = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        ENDTIME_ = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.link != null">
        LINK_ = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.linktitle != null">
        LINKTITLE_ = #{record.linktitle,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.record != null">
        RECORD_ = #{record.record,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update frend_link
    set ID = #{record.id,jdbcType=VARCHAR},
      CREATETIME_ = #{record.createtime,jdbcType=TIMESTAMP},
      ENDTIME_ = #{record.endtime,jdbcType=TIMESTAMP},
      LINK_ = #{record.link,jdbcType=VARCHAR},
      LINKTITLE_ = #{record.linktitle,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=INTEGER},
      RECORD_ = #{record.record,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update frend_link
    set ID = #{record.id,jdbcType=VARCHAR},
      CREATETIME_ = #{record.createtime,jdbcType=TIMESTAMP},
      ENDTIME_ = #{record.endtime,jdbcType=TIMESTAMP},
      LINK_ = #{record.link,jdbcType=VARCHAR},
      LINKTITLE_ = #{record.linktitle,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.lihang.blog.mapper.entity.FrendLink">
    update frend_link
    <set>
      <if test="createtime != null">
        CREATETIME_ = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        ENDTIME_ = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="link != null">
        LINK_ = #{link,jdbcType=VARCHAR},
      </if>
      <if test="linktitle != null">
        LINKTITLE_ = #{linktitle,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="record != null">
        RECORD_ = #{record,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xyz.lihang.blog.mapper.entity.FrendLink">
    update frend_link
    set CREATETIME_ = #{createtime,jdbcType=TIMESTAMP},
      ENDTIME_ = #{endtime,jdbcType=TIMESTAMP},
      LINK_ = #{link,jdbcType=VARCHAR},
      LINKTITLE_ = #{linktitle,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=INTEGER},
      RECORD_ = #{record,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.lihang.blog.mapper.entity.FrendLink">
    update frend_link
    set CREATETIME_ = #{createtime,jdbcType=TIMESTAMP},
      ENDTIME_ = #{endtime,jdbcType=TIMESTAMP},
      LINK_ = #{link,jdbcType=VARCHAR},
      LINKTITLE_ = #{linktitle,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>